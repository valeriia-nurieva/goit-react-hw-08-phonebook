{"version":3,"file":"static/js/683.aada30a9.chunk.js","mappings":"uOAEaA,EAAaC,EAAAA,GAAAA,KAAH,6GAGJ,gBAAGC,EAAH,EAAGA,MAAH,gBAAkBA,EAAMC,QAAQ,GAAhC,IAINC,EAAYH,EAAAA,GAAAA,MAAH,4FAGH,gBAAGC,EAAH,EAAGA,MAAH,gBAAkBA,EAAMC,QAAQ,GAAhC,IAGNE,EAAYJ,EAAAA,GAAAA,MAAH,+KACT,gBAAGC,EAAH,EAAGA,MAAH,gBAAkBA,EAAMC,QAAQ,GAAhC,IACS,gBAAGD,EAAH,EAAGA,MAAH,gBAAkBA,EAAMI,OAAOC,MAA/B,IACH,gBAAGL,EAAH,EAAGA,MAAH,gBAAkBA,EAAMC,QAAQ,GAAhC,IAEJ,gBAAED,EAAF,EAAEA,MAAF,gBAAcA,EAAMM,UAAU,GAA9B,IAEC,gBAAGN,EAAH,EAAGA,MAAH,gBAAkBA,EAAMC,QAAQ,GAAhC,IAGHM,EAASR,EAAAA,GAAAA,OAAH,uaAGF,gBAAGC,EAAH,EAAGA,MAAH,gBAAkBA,EAAMC,QAAQ,GAAhC,IACG,gBAAGD,EAAH,EAAGA,MAAH,gBAAkBA,EAAMC,QAAQ,GAAhC,IACF,gBAAGD,EAAH,EAAGA,MAAH,gBAAkBA,EAAMC,QAAQ,GAAhC,IACC,gBAAGD,EAAH,EAAGA,MAAH,gBAAkBA,EAAMC,QAAQ,GAAhC,IAGA,gBAAGD,EAAH,EAAGA,MAAH,gBAAkBA,EAAMC,QAAQ,GAAhC,IACG,gBAAGD,EAAH,EAAGA,MAAH,gBAAkBA,EAAMI,OAAOI,OAA/B,IACX,gBAAGR,EAAH,EAAGA,MAAH,gBAAkBA,EAAMI,OAAOK,MAA/B,IAMa,gBAAGT,EAAH,EAAGA,MAAH,gBAAkBA,EAAMI,OAAOM,MAA/B,I,SCVxB,EA5Bc,WACV,IAAMC,GAAWC,EAAAA,EAAAA,MAYjB,OACI,UAACd,EAAD,CAAYe,SAXK,SAAAC,GACjBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfN,GAASO,EAAAA,EAAAA,IAAM,CACXC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAErCL,EAAKO,OACR,EAGuCC,aAAa,MAAjD,WACI,UAACtB,EAAD,oBAEI,SAACC,EAAD,CAAWsB,KAAK,QAAQC,KAAK,cAEjC,UAACxB,EAAD,uBAEI,SAACC,EAAD,CAAWsB,KAAK,WAAWC,KAAK,iBAEpC,SAACnB,EAAD,CAAQkB,KAAK,SAAb,sBAGX,C","sources":["pages/Login/Login.styled.js","pages/Login/Login.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${({ theme }) => `${theme.spacing(6)}`};\n  width: 400px;\n`\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${({ theme }) => `${theme.spacing(4)}`};\n`\n\nexport const FormInput = styled.input`\n  padding: ${({ theme }) => `${theme.spacing(2)}`};\n  border: 1px solid ${({ theme }) => `${theme.colors.black}`};\n  border-radius: ${({ theme }) => `${theme.spacing(1)}`};\n  font-family: sans-serif;\n  font-size: ${({theme})=>`${theme.fontSizes[2]}`};\n  outline: none;\n  margin-top: ${({ theme }) => `${theme.spacing(1)}`};\n`\n\nexport const Button = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  padding-top: ${({ theme }) => `${theme.spacing(3)}`};\n  padding-bottom: ${({ theme }) => `${theme.spacing(3)}`};\n  padding-left: ${({ theme }) => `${theme.spacing(4)}`};\n  padding-right: ${({ theme }) => `${theme.spacing(4)}`};\n  width: 120px;\n  border: none;\n  border-radius: ${({ theme }) => `${theme.spacing(1)}`};\n  background-color: ${({ theme }) => `${theme.colors.accent}`};\n  color: ${({ theme }) => `${theme.colors.white}`};\n  font-size: inherit;\n  cursor: pointer;\n  transition: cubic-bezier(0.075, 0.82, 0.165, 1) 3250ms;\n  :hover,\n  :focus {\n    background-color: ${({ theme }) => `${theme.colors.hover}`};\n  }\n`;","import { useDispatch } from \"react-redux\";\nimport { logIn } from \"redux/auth/operation\";\nimport { FormStyled, FormLabel, FormInput, Button } from \"./Login.styled\";\n\nconst Login = () => {\n    const dispatch = useDispatch();\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        dispatch(logIn({\n            email: form.elements.email.value,\n            password: form.elements.password.value,\n        }))\n        form.reset();\n    };\n\n    return (\n        <FormStyled onSubmit={handleSubmit} autoComplete=\"off\">\n            <FormLabel>\n                Email\n                <FormInput type=\"email\" name=\"email\" />\n            </FormLabel>\n            <FormLabel>\n                Password\n                <FormInput type=\"password\" name=\"password\" />\n            </FormLabel>\n            <Button type=\"submit\">Log In</Button>\n        </FormStyled>\n    )\n};\n\nexport default Login;"],"names":["FormStyled","styled","theme","spacing","FormLabel","FormInput","colors","black","fontSizes","Button","accent","white","hover","dispatch","useDispatch","onSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","value","password","reset","autoComplete","type","name"],"sourceRoot":""}