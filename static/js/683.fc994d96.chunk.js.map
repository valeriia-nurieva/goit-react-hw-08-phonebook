{"version":3,"file":"static/js/683.fc994d96.chunk.js","mappings":"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","sources":["components/Loader.js","pages/Login/Login.styled.js","pages/Login/Login.jsx","utils/validationSchemas.js"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"40\"\n      width=\"40\"\n      radius=\"48\"\n      color=\"rgb(255 255 255 / 85%)\"\n      ariaLabel=\"loading\"\n      wrapperStyle={{\n        position: 'fixed',\n        top: '50%',\n        left: ' 50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n","import { Form, Field } from 'formik';\nimport styled from 'styled-components';\nimport bg from 'img/bg.png';\n\nexport const Section = styled.section`\n  padding-top: 40px;\n  min-height: calc(100vh - 76px);\n  background-image: url(${bg});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n`;\n\nexport const FormStyled = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${({ theme }) => `${theme.spacing(6)}`};\n  width: 100%;\n  max-width: 400px;\n  margin: 0 auto;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${({ theme }) => `${theme.spacing(4)}`};\n  color: ${({ theme }) => `${theme.colors.white}`};\n`;\n\nexport const FormInput = styled(Field)`\n  padding: ${({ theme }) => `${theme.spacing(2)}`};\n  border-radius: ${({ theme }) => `${theme.spacing(1)}`};\n  font-family: sans-serif;\n  outline: none;\n  margin-top: ${({ theme }) => `${theme.spacing(1)}`};\n  border: none;\n  color: ${({ theme }) => `${theme.colors.white}`};\n  background-color: rgb(255 255 255 / 15%);\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  padding-top: ${({ theme }) => `${theme.spacing(3)}`};\n  padding-bottom: ${({ theme }) => `${theme.spacing(3)}`};\n  padding-left: ${({ theme }) => `${theme.spacing(4)}`};\n  padding-right: ${({ theme }) => `${theme.spacing(4)}`};\n  width: 120px;\n  border: none;\n  border-radius: ${({ theme }) => `${theme.spacing(1)}`};\n  background-color: rgb(242 107 109 / 75%);\n  color: ${({ theme }) => `${theme.colors.white}`};\n  font-size: inherit;\n  margin: 0 auto;\n  cursor: pointer;\n  transition: cubic-bezier(0.075, 0.82, 0.165, 1) 250ms;\n  :hover,\n  :focus {\n    background-color: ${({ theme }) => `${theme.colors.accentPink}`};\n  }\n`;\n\nexport const ErrorText = styled.p`\n  color: ${({ theme }) => `${theme.colors.red}`};\n  margin-bottom: ${({ theme }) => `${theme.spacing(3)}`};\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logIn } from 'redux/auth/operation';\nimport { selectError, selectIsLoading } from 'redux/auth/selectors';\nimport { userLogInSchema } from 'utils/validationSchemas';\nimport Container from 'components/Container';\nimport { Loader } from 'components/Loader';\nimport {\n  Section,\n  FormStyled,\n  FormLabel,\n  FormInput,\n  Button,\n  ErrorText,\n} from './Login.styled';\n\nconst initialValues = {\n  password: '',\n  email: '',\n};\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n    const handleSubmit = (values, { resetForm }) => {\n        dispatch(logIn(values));\n        resetForm();\n    };\n    \n  return (\n    <Section>\n      <Container>\n        {isLoading && !error && <Loader />}\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleSubmit}\n          validationSchema={userLogInSchema}\n        >\n          <FormStyled autoComplete=\"off\">\n            <FormLabel>\n              Email\n              <FormInput type=\"email\" name=\"email\" />\n            </FormLabel>\n            <ErrorMessage name=\"email\" component={ErrorText} />\n            <FormLabel>\n              Password\n              <FormInput type=\"password\" name=\"password\" />\n            </FormLabel>\n            <ErrorMessage name=\"password\" component={ErrorText} />\n            {error && (\n              <ErrorText>\n                Sorry, we did not find this user &#128532; Please check your\n                login information and try again.\n              </ErrorText>\n            )}\n            <Button type=\"submit\">Log In</Button>\n          </FormStyled>\n        </Formik>\n      </Container>\n    </Section>\n  );\n};\n\nexport default Login;\n","import { object, string } from 'yup';\n\nexport let userLogInSchema = object({\n    password: string().min(7).required(),\n    email: string().email().required(),\n});\n\nexport let userRegisterSchema = object({\n    password: string().min(7).required(),\n    email: string().email().required(),\n    name: string().min(2).required(),\n});"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","position","top","left","transform","wrapperClassName","visible","Section","styled","bg","FormStyled","Form","theme","spacing","FormLabel","colors","white","FormInput","Field","Button","accentPink","ErrorText","red","initialValues","password","email","dispatch","useDispatch","isLoading","useSelector","selectIsLoading","error","selectError","Container","onSubmit","values","resetForm","logIn","validationSchema","userLogInSchema","autoComplete","type","name","component","object","string","min","required","userRegisterSchema"],"sourceRoot":""}