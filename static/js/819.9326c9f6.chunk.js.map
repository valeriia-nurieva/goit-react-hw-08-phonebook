{"version":3,"file":"static/js/819.9326c9f6.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Form/Form.styled.js","components/Form/Form.jsx","components/ModalAdd/ModalAdd.styled.js","components/ModalAdd/ModalAdd.jsx","components/AddContactForm/AddContactForm.styled.js","components/AddContactForm/AddContactForm.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Loader.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\nexport const selectFilteredContacts = createSelector([selectContacts, selectFilter],\n  (contacts, filter) => {\n      const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n  }\n)\n","import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${({ theme }) => `${theme.spacing(6)}`};\n  width: 100%;\n  min-width: 320px;\n  margin: 0 auto;\n  margin-bottom: ${({ theme }) => `${theme.spacing(4)}`}; \n`\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${({ theme }) => `${theme.spacing(4)}`};\n  color: ${({ theme }) => `${theme.colors.black}`};\n`\n\nexport const FormInput = styled.input`\n  padding: ${({ theme }) => `${theme.spacing(2)}`};\n  border-radius: ${({ theme }) => `${theme.spacing(1)}`};\n  font-family: sans-serif;\n  font-size: ${({theme})=>`${theme.fontSizes[2]}`};\n  outline: none;\n  margin-top: ${({ theme }) => `${theme.spacing(1)}`};\n  border: 1px solid black;\n  background-color: rgb(255 255 255 / 50%);\n`\n\nexport const Button = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  padding-top: ${({ theme }) => `${theme.spacing(3)}`};\n  padding-bottom: ${({ theme }) => `${theme.spacing(3)}`};\n  padding-left: ${({ theme }) => `${theme.spacing(4)}`};\n  padding-right: ${({ theme }) => `${theme.spacing(4)}`};\n  width: 120px;\n  border: none;\n  border-radius: ${({ theme }) => `${theme.spacing(1)}`};\n  background-color: ${({ theme }) => `${theme.colors.green}`};\n  color: ${({ theme }) => `${theme.colors.white}`};\n  font-size: inherit;\n  margin: 0 auto;\n  cursor: pointer;\n  transition: cubic-bezier(0.075, 0.82, 0.165, 1) 250ms;\n  :hover,\n  :focus {\n    background-color: ${({ theme }) => `${theme.colors.hover}`};\n  }\n`;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { MdPersonAdd } from 'react-icons/md';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { FormStyled, FormLabel, FormInput, Button } from './Form.styled';\n\nconst Form = ({ onClickAdd }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'number':\n        return setNumber(value);\n      default:\n        throw new Error('Unexpected type of field');\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contacts.find(contact => contact.name === name)) {\n      return toast.error(`${name} is already in contacts.`);\n    } else {\n      dispatch(\n        addContact({\n          name,\n          number,\n        })\n      );\n      reset();\n      onClickAdd();\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormStyled onSubmit={handleSubmit}>\n      <FormLabel>\n        Name\n        <FormInput\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </FormLabel>\n      <FormLabel>\n        Number\n        <FormInput\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </FormLabel>\n      <Button type=\"submit\">\n        <MdPersonAdd color=\"currentColor\" size=\"24px\" />\n      </Button>\n      <Toaster />\n    </FormStyled>\n  );\n};\n\nexport default Form;\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  display: block;\n  padding: ${({ theme }) => `${theme.spacing(1)}`};\n  border: none;\n  background-color: transparent;\n  margin-left: auto;\n  cursor: pointer;\n  transition: transform cubic-bezier(0.075, 0.82, 0.165, 1) 250ms;\n  :hover,\n  :focus {\n    transform: scale(1.1);\n  }\n`;","import Modal from 'react-modal';\nimport { GrFormClose } from 'react-icons/gr';\nimport Form from '../Form';\nimport { Button } from './ModalAdd.styled';\n\nconst modalStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nModal.setAppElement('#root');\n\nconst ModalAdd = ({ modalIsOpen, closeModal }) => {\n  return (\n    <Modal isOpen={modalIsOpen} onRequestClose={closeModal} style={modalStyles}>\n      <Button onClick={closeModal} type='button'>\n        <GrFormClose color=\"currentColor\" size=\"24px\" />\n      </Button>\n      <Form onClickAdd={closeModal} />\n    </Modal>\n  );\n};\n\nexport default ModalAdd;\n","import styled from 'styled-components';\nimport bgContacts from 'img/bg-contacts.png';\nimport Container from 'components/Container/Container.styled';\n\nexport const ContainerBg = styled(Container)`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  background-image: url(${bgContacts});\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: left 16px center;\n  min-height: 120px;\n`;\n\nexport const ButtonAdd = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  gap: ${({ theme }) => `${theme.spacing(1)}`};\n  padding: ${({ theme }) => `${theme.spacing(1)}`};\n  border: none;\n  border-radius: ${({ theme }) => `${theme.spacing(1)}`};\n  background-color: transparent;\n  font-size: 18px;\n  color: ${({ theme }) => `${theme.colors.green}`};\n  cursor: pointer;\n  transition: transform cubic-bezier(0.075, 0.82, 0.165, 1) 250ms;\n  :hover,\n  :focus {\n    transform: scale(1.1);\n  }\n`;","import { useState } from 'react';\nimport { BiMessageSquareAdd } from 'react-icons/bi';\nimport ModalAdd from 'components/ModalAdd';\nimport { ContainerBg, ButtonAdd } from './AddContactForm.styled';\n\nconst AddContactForm = () => {\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n    function openModal() {\n    setIsOpen(true);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  return (\n        <ContainerBg>\n          <ButtonAdd onClick={openModal} type='button'>\n            add contact\n            <BiMessageSquareAdd color=\"currentColor\" size=\"26px\" />\n          </ButtonAdd>\n          <ModalAdd modalIsOpen={modalIsOpen} closeModal={closeModal} />\n        </ContainerBg>\n  );\n};\n\nexport default AddContactForm;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n`;\n\nexport const Phone = styled.a`\n  color: ${({ theme }) => `${theme.colors.white}`};\n  cursor: pointer;\n  transition: transform cubic-bezier(0.075, 0.82, 0.165, 1) 250ms;\n  :hover,\n  :focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  padding: ${({ theme }) => `${theme.spacing(2)}`};\n  border: none;\n  border-radius: ${({ theme }) => `${theme.spacing(1)}`};\n  color: ${({ theme }) => `${theme.colors.accentPink}`};\n  background-color: transparent;\n  font-size: inherit;\n  cursor: pointer;\n  transition: transform cubic-bezier(0.075, 0.82, 0.165, 1) 250ms;\n  :hover,\n  :focus {\n    transform: scale(1.1);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { MdOutlineDeleteOutline } from 'react-icons/md';\nimport { Button, Wrapper, Phone } from './ContactItem.styled';\n\nconst ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n  };\n  return (\n    <>\n      <p>{name}</p>\n      <Wrapper>\n        <Phone href={`tel:${number}`}>{number}</Phone>\n        <Button type=\"button\" onClick={handleDelete}>\n          <MdOutlineDeleteOutline color=\"currentColor\" size=\"24px\" />\n        </Button>\n      </Wrapper>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => `${theme.spacing(2)}`};\n  margin-bottom: ${({ theme }) => `${theme.spacing(6)}`};\n  width: 100%;\n  max-width: 400px;\n  margin: 0 auto;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${({ theme }) => `${theme.colors.white}`};\n  margin-bottom: ${({ theme }) => `${theme.spacing(2)}`};\n`;\n\nexport const Info = styled.p`\n  color: ${({ theme }) => `${theme.colors.white}`};\n  text-align: center;\n`","import { useSelector } from 'react-redux';\nimport ContactItem from 'components/ContactItem';\nimport Container from 'components/Container';\nimport { List, Item, Info } from './ContactList.styled';\nimport {\n  selectContacts,\n  selectFilteredContacts,\n} from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <Container>\n      {contacts.length > 0 ? (\n        <List>\n          {filteredContacts.map(({ id, name, number }) => {\n            return (\n              <Item key={id}>\n                <ContactItem name={name} id={id} number={number} />\n              </Item>\n            );\n          })}\n        </List>\n      ) : (\n        <Info>you have no contacts yet &#128542;</Info>\n      )}\n    </Container>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterWraper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 400px;\n  margin: 0 auto;\n  margin-bottom: ${({ theme }) => `${theme.spacing(3)}`};\n`\n\nexport const FilterTitle = styled.label`\n  display: flex;\n  flex-direction: column;\n  color: ${({ theme }) => `${theme.colors.accentPink}`}; \n`\n\nexport const FilterInput = styled.input`\n  padding: ${({ theme }) => `${theme.spacing(2)}`};\n  border-radius: ${({ theme }) => `${theme.spacing(1)}`};\n  font-family: sans-serif;\n  font-size: ${({theme})=>`${theme.fontSizes[2]}`};\n  outline: none;\n  margin-top: ${({ theme }) => `${theme.spacing(2)}`};\n  border: none;\n  color: ${({ theme }) => `${theme.colors.white}`}; \n  background-color: rgb(255 255 255 / 15%);\n`","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport Container from 'components/Container';\nimport { FilterTitle, FilterInput, FilterWraper } from './Filter.styled';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <Container>\n      <FilterWraper>\n        <FilterTitle>\n          Find contacts by name\n          <FilterInput type=\"text\" value={filter} onChange={changeFilter} />\n        </FilterTitle>\n      </FilterWraper>\n    </Container>\n  );\n};\n\nexport default Filter;\n","import { Watch } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Watch\n      height=\"40\"\n      width=\"40\"\n      radius=\"48\"\n      color=\"rgb(255 255 255 / 85%)\"\n      ariaLabel=\"watch-loading\"\n      wrapperStyle={{\n        position: 'fixed',\n        top: '50%',\n        left: ' 50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport AddContactForm from 'components/AddContactForm';\nimport ContactList from '../../components/ContactList';\nimport Filter from '../../components/Filter';\nimport { Loader } from 'components/Loader';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from '../../redux/contacts/operations';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <AddContactForm/>\n      <Filter />\n      {isLoading && !error && <Loader />}\n      {error && <p>{error}</p>}\n      {!isLoading && <ContactList />}\n    </>\n  );\n};\n\nexport default Contacts;"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectFilteredContacts","createSelector","normalizedFilter","toLowerCase","name","includes","FormStyled","styled","theme","spacing","FormLabel","colors","black","FormInput","fontSizes","Button","green","white","hover","onClickAdd","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","Error","reset","onSubmit","preventDefault","find","contact","toast","addContact","type","pattern","title","required","onChange","color","size","modalStyles","content","top","left","right","bottom","marginRight","transform","Modal","modalIsOpen","closeModal","isOpen","onRequestClose","style","onClick","ContainerBg","Container","bgContacts","ButtonAdd","setIsOpen","Wrapper","Phone","accentPink","id","href","deleteContact","List","Item","Info","filteredContacts","length","map","FilterWraper","FilterTitle","FilterInput","setFilter","Loader","height","width","radius","ariaLabel","wrapperStyle","position","wrapperClassName","visible","useEffect","fetchContacts"],"sourceRoot":""}